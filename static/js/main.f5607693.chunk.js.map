{"version":3,"sources":["Context/context.js","components/Level_selector/button.js","components/navbar.js","components/Game_over/Game_over.js","components/easyblock.js","easy.js","components/footer.js","App.js","index.js"],"names":["LevelContext","createContext","LevelProvider","children","useState","level","setLevel","selected","setSelected","Provider","value","selectLevel","toggleDisplay","setTimeout","LevelButton","context","useContext","hovered","setHovered","toggleHover","x","class_switcher","console","log","className","class","style","textAlign","href","onClick","onMouseEnter","onMouseLeave","Navbar","Game_over","props","responseTime","time","score","toFixed","width","height","margin","reset","EasyBlock","clicked","setClicked","timer","setTimer","useEffect","timeout","setInterval","clearTimeout","val","setScore","setStyle","Math","random","left","setLeft","top","setTop","timer1","position","EasyGame","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5607693.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const LevelContext = createContext();\n\nexport const LevelProvider = ({ children }) => {\n  const [level, setLevel] = useState(\" \");\n  const [selected, setSelected] = useState(false);\n\n  const toggleDisplay = () => {\n    setTimeout(setSelected(!selected), \"1500\");\n  };\n  const selectLevel = (value) => setLevel(value);\n\n  return (\n    <LevelContext.Provider\n      value={{ level, selectLevel, selected, toggleDisplay }}\n    >\n      {children}\n    </LevelContext.Provider>\n  );\n};\n","import React, { useState, useContext } from 'react'\n//import { FaDivide } from 'react-icons/fa'\nimport './button.css';\nimport '../navbar.css';\nimport { LevelContext } from '../../Context/context'\n\nfunction LevelButton() {\n    const context = useContext(LevelContext);\n   \n    const [hovered, setHovered] = useState(0);\n    const toggleHover = (x) => {\n        setHovered(x);\n    }\n    /*function class_switcher(hovered) {\n        console.log('i entered functlevel-easy')\n    case 1 : return('btn-level btn-changer')    \n    case 2 : return('btn-level btn-changer-2')s\n    default : return('btn-level')\n    }}*/\n    function class_switcher(hovered) {\n        if (hovered == 0)\n            return ('btn-level btn-level-easy')\n        else if (hovered == 1)\n            return ('btn-level btn-level-changer')\n        else if (hovered == 2)\n            return ('btn-level btn-level-changer-2')\n    }\n \nconsole.log(context.level)\n    return (\n        <div className = 'Select-level'>\n                 <nav class=\"navbar navbar-light bg-light\">\n          <div class=\"container-fluid\" style={{textAlign : 'center'}}>\n            <a class=\"navbar-brand\" href=\"#\">\n        \n            <h3 className = \"nav-text\">Are you fast?</h3> \n            </a>\n          </div>\n        </nav>\n            <button className={class_switcher(hovered)} onClick ={ () => {context.selectLevel('easy');  context.toggleDisplay() }}> </button>\n            <button className={class_switcher(hovered)} onMouseEnter={() => toggleHover(1)} onMouseLeave={() => toggleHover(0)} onClick ={ () => {context.selectLevel('medium');  context.toggleDisplay() }}>  </button>\n            <button className='btn-level btn-level-hard' onMouseEnter={() => toggleHover(2)} onMouseLeave={() => toggleHover(0)} onClick ={() => {context.selectLevel('hard'); context.toggleDisplay() }}> </button>\n        </div>\n    )\n\n}\n\nexport default LevelButton;","import React, {useState} from 'react';\nimport {MdFingerprint} from 'react-icons/md';\nimport './navbar.css';\n\nimport {FaBars, FaTimes } from \"react-icons/fa\";\n\nfunction Navbar() {\n\n    return (\n        <nav class=\"navbar navbar-light bg-light\">\n          <div class=\"container-fluid\" style={{textAlign : 'center'}}>\n            <a class=\"navbar-brand\" href=\"#\">\n        \n            <h3 className = \"nav-text\">Are you fast?</h3> \n            </a>\n          </div>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import React, { Component } from \"react\";\nimport \"./gameover.css\";\nimport { useContext } from \"react\";\nimport { LevelContext } from \"../../Context/context\";\n\nconst Game_over = (props) => {\n  let responseTime;\n\n  responseTime = props.time / (props.score * 1000);\n  responseTime = responseTime.toFixed(3);\n\n  const context = useContext(LevelContext);\n  return (\n    <div className=\"card\" style={{ width: \"20rem\", height: \"20rem\" }}>\n      <h3 className=\"game_over_heading\"> Game Over </h3>\n      <div className=\"game_over_content\">\n        <br />\n        <p> Your score is : {props.score}</p>\n        <p> Your average response time is : {responseTime} ms</p>\n        <button\n          className=\"btn btn-primary\"\n          style={{ margin: \"20px\" }}\n          onClick={() => props.reset(true)}\n        >\n          {\" \"}\n          Play Again{\" \"}\n        </button>\n        <button\n          className=\"btn btn-primary\"\n          style={{ margin: \"20px\" }}\n          onClick={() => {\n            context.toggleDisplay();\n            context.selectLevel(\" \");\n          }}\n        >\n          {\" \"}\n          Home{\" \"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Game_over;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport Navbar from \"../components/navbar\";\nimport \"./easyblock.css\";\nimport Game_over from \"../components/Game_over/Game_over\";\nimport { LevelContext } from \"../Context/context\";\n\nfunction EasyBlock() {\n  const [clicked, setClicked] = useState(true);\n\n  const [timer, setTimer] = useState(0);\n  const [start, setStart] = useState(false);\n\n  useEffect(() => {\n    if (clicked) {\n      //   console.log(\"a second passed\");\n      const timeout = setInterval(() => {\n        setTimer(timer + 1);\n      }, 1);\n      return () => {\n        clearTimeout(timeout);\n      };\n    }\n  }, [clicked, timer]);\n\n  const context = useContext(LevelContext);\n\n  const [start_time, setStartTime] = useState(0);\n  const [end_time, setEndTime] = useState(0);\n  const [score, setScore] = useState(0);\n  const [style, setStyle] = useState(\" \");\n  const [left, setLeft] = useState(Math.random() * 100 + \"%\");\n  const [top, setTop] = useState(Math.random() * 50 + \"%\");\n\n  //   var left = Math.random() * 100 + \"%\";\n  //   var top = Math.random() * 50 + \"%\";\n  function reset() {\n    setClicked(true);\n    setScore(0);\n    setTimer(0);\n  }\n  function blockSelect(val) {\n    if (val == \"easy\") return \"easy-block\";\n    if (val == \"medium\") return \"medium-block\";\n    if (val == \"hard\") return \"hard-block\";\n    else return \"no-block\";\n  }\n  function timeSet(val) {\n    if (val == \"easy\") return 2000;\n    if (val == \"medium\") return 1500;\n    if (val == \"hard\") return 1000;\n    else return 2000;\n  }\n  useEffect(() => {\n    setLeft(Math.random() * 100 + \"%\");\n    setTop(Math.random() * 50 + \"%\");\n\n    let timer1 = setTimeout(() => setClicked(false), timeSet(context.level));\n    // this will clear Timeout\n    // when component unmount like in willComponentUnmount\n    // and show will not change to true\n    return () => {\n      clearTimeout(timer1);\n    };\n  }, [score, clicked]);\n  function Aimhit() {\n    setClicked(true);\n    setScore(score + 1);\n    setStyle(left, top);\n  }\n  var total_time = 0;\n\n  return clicked ? (\n    <div className=\"easy-mode\">\n      <div className=\"score\">Score : {score} </div>\n      <div className=\"time\">timer : {timer} </div>\n\n      <div className=\"game-screen\">\n        <button\n          className={blockSelect(context.level)}\n          onClick={Aimhit}\n          style={{ left, top, position: \"absolute\" }}\n        ></button>\n      </div>\n    </div>\n  ) : (\n    <Game_over time={timer} score={score} reset={reset} />\n  );\n}\n\nexport default EasyBlock;\n","import React, { useContext } from 'react';\nimport Block from './components/easyblock';\nimport './easy.css';\nimport LevelButton from './components/Level_selector/button';\nimport {LevelContext} from './Context/context';\n\nfunction EasyGame() {\n    const context = useContext(LevelContext);\n\n    return( \n        <div className='gameborder'>\n                {context.selected ? <Block /> : <LevelButton/> }\n            \n        </div>\n    )\n} \n\nexport default EasyGame;","import React, { Component } from 'react'\nimport './footer.css';\n\nfunction Footer() {\n\n    return (\n        <div className = 'footer'>\n            Created by Ishaan | 2021\n        </div>\n    )\n} \n\nexport default Footer;","import React, { useContext } from \"react\";\nimport \"./App.css\";\nimport LevelButton from \"./components/Level_selector/button\";\nimport { LevelProvider, LevelContext } from \"./Context/context\";\n//import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Game from \"./easy\";\nimport Footer from \"./components/footer\";\nimport Game_over from \"./components/Game_over/Game_over\";\n\nfunction App() {\n  return (\n    <LevelProvider>\n      <LevelButton />\n      <Game />\n\n      <Footer />\n    </LevelProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}